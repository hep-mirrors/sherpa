sherpa="$PWD/../../../SHERPA/Run/Sherpa"

# interprete AM_LOG_FLAGS (i.e. all args to this script except for the last
# one, which is the TEST) passed as arguments to this script as Sherpa command
# line args
sherpa_args=()
while (( "$#" > 1 )); do
  sherpa_args+=("$1")
  shift
done

# the only remaining arg is the TEST itself
setup_conf_path="$1"
test_dir="${1%/*}"
setup_conf="${setup_conf_path##*/}"
setup_name="${setup_conf%.yaml}"

# fix paths
setup_conf_path="../${setup_name}.yaml"
base_conf_path="../Base.yaml"

# create/clean and enter a working directory
rm -rf "$setup_name"
mkdir -p "$setup_name"
cd "$setup_name"

# Libraries that are not linked to the Sherpa binary will not be found (or
# worse: an outdated one is found, e.g. in the install directory, such that
# `make check` would work properly only after `make install`, which is not
# as it should be!) when calling Sherpa, so we should link them here such
# that Library_Loader uses them, since it's first looking for libraries in the
# run directory, before searching in the install path or in
# (DY)LD_LIBRARY_PATH.
ln -s "$PWD/../../../../MODEL/SMGold/.libs/libSherpaSMGold@LIB_SUFFIX@" .
ln -s "$PWD/../../../../AddOns/EWSud/.libs/libSherpaEWSud@LIB_SUFFIX@" .

"$sherpa" "${sherpa_args[@]}" "RUNDATA: [$base_conf_path, $setup_conf_path]"
