cmake_minimum_required(VERSION 3.6)

# Set the project name
project(${PROJECT_NAME} LANGUAGES CXX VERSION ${VERSION})

#### RPATH handling #####

set(CMAKE_MACOSX_RPATH 1)

# use, i.e. don't skip the full RPATH for the build tree
SET(CMAKE_SKIP_BUILD_RPATH  FALSE)

# when building, don't use the install RPATH already
# (but later on when installing)
SET(CMAKE_BUILD_WITH_INSTALL_RPATH FALSE)

SET(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}")

# add the automatically determined parts of the RPATH
# which point to directories outside the build tree to the install RPATH
SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)

# the RPATH to be used when installing, but only if it's not a system directory
LIST(FIND CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}" isSystemDir)
IF("${isSystemDir}" STREQUAL "-1")
   SET(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}")
ENDIF("${isSystemDir}" STREQUAL "-1")

## Build Library
add_library(${PROJECT_NAME}_options INTERFACE)
target_compile_features(${PROJECT_NAME}_options INTERFACE cxx_std_11)

SET(SHERPA-MC_DIR ${SHERPA_ROOT_DIR})
find_package(SHERPA-MC REQUIRED)

add_library(Sherpa${PROJECT_NAME} SHARED ${LORENTZ_FILES} ${MODEL_FILES} ${COLOR_FILES})
target_link_libraries(Sherpa${PROJECT_NAME} PRIVATE ${PROJECT_NAME}_options PUBLIC SHERPA::ModelMain SHERPA::ModelUFO SHERPA::METoolsMain SHERPA::METoolsCurrents SHERPA::METoolsExplicit SHERPA::ToolsPhys SHERPA::ToolsOrg)
set_source_files_properties(${LORENTZ_FILES} PROPERTIES COMPILE_OPTIONS ${LORENTZ_FLAGS})
set_source_files_properties(${MODEL_FILES} PROPERTIES COMPILE_OPTIONS ${MODEL_FLAGS})

install(TARGETS Sherpa${PROJECT_NAME} LIBRARY DESTINATION ${INSTALL_DIR})
