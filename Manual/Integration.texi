@node Integration
@section Integration

The following parameters are used to steer the integration:

@menu
* INTEGRATION_ERROR::    The relative integration error
* INTEGRATOR::           The integrator type
* VEGAS_MODE::           The Vegas mode and whether it is enabled
* FINISH_OPTIMIZATION::  Whether to fully optimise the Vegas grid
* PSI::                  Phase space integrator settings
@end menu


@node INTEGRATION_ERROR
@subsection INTEGRATION_ERROR
@cindex INTEGRATION_ERROR
Specifies the relative integration error target.


@node INTEGRATOR
@subsection INTEGRATOR
@cindex INTEGRATOR
Specifies the integrator. The possible integrator types
depend on the matrix element generator. In general users 
should rely on the default value and otherwise seek the 
help of the authors, see @ref{Authors}.
Within AMEGIC++ the options @option{AMEGIC: @{INTEGRATOR: <type>,
RS_INTEGRATOR: <type>@}} can be used to steer the behaviour of the default
integrator.
@itemize
@item @option{4}: building up the channels is achieved through 
respecting the peak structure given by the propagators. The 
algorithm works recursively starting from the initial state.
@item @option{5}: this is an extension of option 4. In the case of competing
peaks (e.g. a Higgs boson decaying into W+W-, which further decay), additional
channels are produced to account for all kinematical configurations where one
of the propagating particles is produced on its mass shell.
@item @option{6}: in contrast to option 4 the algorithm now starts from the 
final state. The extra channels described in option 5 are produced as well.
This is the default integrator if both beams are hadronic.
@item @option{7}: Same as option @option{4} but with tweaked 
exponents. Optimised for the integration of real-subtracted 
matrix-elements. This is the default integrator when at least one of the beams
is not hadronic.
@end itemize 
In addition, a few ME-generator independent integrators
have been implemented for specific processes:
@itemize @bullet
@item @option{Rambo}: RAMBO @mycite{Kleiss1985gy}. Generates isotropic 
final states.
@item @option{VHAAG}: Vegas-improved HAAG integrator @mycite{vanHameren2002tc}.
@item @option{VHAAG_res}: is an integrator for a final state of a weak boson,
decaying into two particles plus two or more jets based on HAAG @mycite{vanHameren2002tc}. 
This integrator can be further configured using @code{VHAAG} sub-settings, i.e.
@code{VHAAG: @{<sub-setting>: <value>@}}. The following sub-settings are
available. @code{RES_KF} specifies
the kf-code of the weak boson, the default is W (@code{24}).
@code{RES_D1} and @code{RES_D2} define the
positions of the Boson decay products within the internal
naming scheme, where @code{2} is the position of the first
outgoing particle. The defaults are @code{2} and @code{3}, respectively, which
is the correct choice for
all processes where the decay products are the only not
strongly interacting final state particles.
@end itemize

@node VEGAS_MODE
@subsection VEGAS_MODE
@cindex VEGAS_MODE
Specifies the mode of the Vegas adaptive integration. @option{0} disables
Vegas, @option{2} enables it (default).

@node FINISH_OPTIMIZATION
@subsection FINISH_OPTIMIZATION
@cindex FINISH_OPTIMIZATION
Specifies whether the full Vegas optimization is to be carried out.
The two possible options are @option{true} (default) and @option{false}.

@node PSI
@subsection PSI
@cindex PSI

The sub-settings for the phase space integrator can be customised as follows:
@verbatim
PSI:
  <sub-setting>: <value>
  # more PSI settings ...
@end verbatim

The following sub-settings exist:

@table @code
@item NMAX
The maximum number of points before cuts to be generated during integration.
This parameter acts on a process-by-process basis.
@item ITMIN
The minimum number of points used for every optimisation cycle. Please note 
that it might be increased automatically for complicated processes.
@item ITMAX
The maximum number of points used for every optimisation cycle. Please note 
that for complicated processes the number given might be insufficient for 
a meaningful optimisation.
@item ITMIN_BY_NODE
Same as @code{ITMIN}, but specified per node to allow tuning of
integration performance in large-scale MPI runs.
@item ITMAX_BY_NODE
Same as @code{ITMAX}, but specified per node to allow tuning of
integration performance in large-scale MPI runs.
@end table
